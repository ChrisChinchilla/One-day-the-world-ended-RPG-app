import rulesMD from './rules.md'
import democracyMD from './scenarios/democracy-overdose.md'
import idleMD from './scenarios/idle-hands.md'

import Mailchimp from 'react-mailchimp-form'
import {
    BrowserRouter as Router,
    Switch,
    Route,
    Link
} from "react-router-dom";

const React = require('react')
const ReactMarkdown = require('react-markdown')

class Homepage extends React.Component {
    constructor(props) {
        super(props)

        this.state = { terms: null }
    }
    componentWillMount() {
        fetch(rulesMD).then((response) => response.text()).then((text) => {
            this.setState({ terms: text })
        })
    }
    render() {
        return (
            <div>
                <ReactMarkdown source={this.state.terms} />
                {/* TODO: make into separate pages and loop through all to allow for additions */}
                <Router>
                    <h2>Example scenarios</h2>
                    <p>Need some help to get started? Here are some example scenarios for you, generated by the app.</p>
                    <ul>
                        <li>
                            <Link to="/scenarios/idle-hands">Idle Hands</Link>
                        </li>
                        <li>
                            <Link to="/scenarios/democracy-overdose">Democracy Overload</Link>
                        </li>
                    </ul>

                    {/* A <Switch> looks through its children <Route>s and
            renders the first one that matches the current URL. */}
                    <Switch>
                        <Route path="/scenarios/idle-hands">
                            <IdleHands />
                        </Route>
                        <Route path="/scenarios/democracy-overdose">
                            <DemocracyOverload />
                        </Route>
                    </Switch>
                </Router>

                <h2>Mailing list</h2>
                <p>Join our mailing list for updates</p>
                <Mailchimp
                    action='https://gregariousmammal.us10.list-manage.com/subscribe/post?u=a177a7811dd28fcd87829f78f&amp;id=ae210e49a5'
                    fields={[
                        {
                            name: 'EMAIL',
                            placeholder: 'Email',
                            type: 'email',
                            required: true
                        }
                    ]}
                />
            </div>
        );
    }
}

class DemocracyOverload extends React.Component {
    constructor(props) {
        super(props)

        this.state = { terms: null }
    }
    componentWillMount() {
        fetch(democracyMD).then((response) => response.text()).then((text) => {
            this.setState({ terms: text })
        })
    }
    render() {
        return (
            <div>
                <ReactMarkdown source={this.state.terms} />
            </div>
        );
    }
}

class IdleHands extends React.Component {
    constructor(props) {
        super(props)

        this.state = { terms: null }
    }
    componentWillMount() {
        fetch(idleMD).then((response) => response.text()).then((text) => {
            this.setState({ terms: text })
        })
    }
    render() {
        return (
            <div>
                <ReactMarkdown source={this.state.terms} />
            </div>
        );
    }
}

export { Homepage }